/* Sorting Array of Strings */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int lexicographic_sort(const char* a, const char* b) {
int len ; int res = 0;
if(strlen(a)>strlen(b)) len = strlen(a);
else len = strlen(b);
for(int i = 0 ; i<len ; i++){
    if(a[i]<b[i]) return -1;

    else if(a[i]>b[i]) return 1;
}

return res;

}

int lexicographic_sort_reverse(const char* a, const char* b) {
int len ; int res = 0;
if(strlen(a)>strlen(b)) len = strlen(a);
else len = strlen(b);
for(int i = 0 ; i<len ; i++){
    if(a[i]<b[i]) return  1;

    else if(a[i]>b[i]) return -1;
}
return res;
}
int sort_by_length(const char* a, const char* b) {
  int len ;
if(strlen(a)>strlen(b)){
     len = strlen(a);
     return 1;
}
 else if (strlen(a)<strlen(b)){
    len = strlen(b);
    return -1;
}
else{
    if(strlen(a)>strlen(b)) len = strlen(a);
else len = strlen(b);
for(int i = 0 ; i<len ; i++){
    if(a[i]<b[i]) return  -1;

    else if(a[i]>b[i]) return 1;
}
}
return 0;
}

int sort_by_number_of_distinct_characters(const char* a, const char* b) {
    int len ; 
   char freqA[125]={0};
   char freqB[125]={0};
   int sumA = 0; int sumB = 0;
   for(int i = 0 ; i<strlen(a) ; i++)
    freqA[a[i]]++;
   for(int i = 0 ; i<=122 ; i++)
       if(freqA[i]>=1){
        sumA++;
       }
   
    for(int i = 0 ; i<strlen(b) ; i++)
    freqB[b[i]]++;
   for(int i = 97 ; i<=122 ; i++)
       if(freqB[i]>=1){
        sumB++;
       }

   if(sumA>sumB) return 1;
   else if(sumA<sumB) return -1;


if(strlen(a)>strlen(b)) len = strlen(a);
else len = strlen(b);
for(int i = 0 ; i<len ; i++){
    if(a[i]<b[i]) return  -1;

    else if(a[i]>b[i]) return 1;
}
return 0;


}

void string_sort(char** arr,const int len,int (*cmp_func)(const char* a, const char* b)){

  for(int i = 0 ; i<len ; i++){
      for(int j = i+1 ; j< len ; j++){
          if(cmp_func(arr[i],arr[j])>0){
              char*temp = arr[i];
              arr[i] = arr[j];
              arr[j] = temp;
          }
      }
  }

  for(int i = len-1 ; i>0 ; i--){
      for(int j = i-1 ; j>0 ; j--){
          if(cmp_func(arr[i],arr[j])<0){
              char*temp = arr[i];
              arr[i] = arr[j];
              arr[j] = temp;
          }
      }
  }

}


int main() 
{
    int n;
    scanf("%d", &n);
  
    char** arr;
	arr = (char**)malloc(n * sizeof(char*));
  
    for(int i = 0; i < n; i++){
        *(arr + i) = malloc(1024 * sizeof(char));
        scanf("%s", *(arr + i));
        *(arr + i) = realloc(*(arr + i), strlen(*(arr + i)) + 1);
    }
  
    string_sort(arr, n, lexicographic_sort);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]);
    printf("\n");

    string_sort(arr, n, lexicographic_sort_reverse);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]); 
    printf("\n");

    string_sort(arr, n, sort_by_length);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]);    
    printf("\n");

    string_sort(arr, n, sort_by_number_of_distinct_characters);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]); 
    printf("\n");
}
